https://github.com/orgs/PacktPublishing/repositories
==================Notes===============
---central gradle---
cp -r microservices/product-service/gradle .
cp microservices/product-service/gradlew .
cp microservices/product-service/gradlew.bat .
cp microservices/product-service/.gitignore .

--run gradle--
./gradlew build
./gradlew build --scan

--Single Remote Debugging --
https://seagence.com/blog/java-remote-debugging-troubleshoot-techniques-challenges-and-approaches/
java -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8000 -jar microservices/recommendation-service/build/libs/*.jar &

--Run Single Project---
Run command
cd $BOOK_HOME/Chapter03/2-basic-rest-services
./gradlew build
java -jar microservices/product-service/build/libs/*.jar &
    curl http://localhost:7001/product/123
java -jar microservices/recommendation-service/build/libs/*.jar &
java -jar microservices/review-service/build/libs/*.jar &
http://localhost:7002/recommendation/1


---kill port---
sudo lsof -t -i:7001
sudo kill -9 $(sudo lsof -t -i:7001)

---install docker on Ubuntu---
https://docs.docker.com/engine/install/ubuntu/
https://docs.docker.com/engine/install/linux-postinstall/
https://docs.docker.com/compose/install/
https://appuals.com/cannot-connect-to-the-docker-daemon-at-unix-var-run-docker-sock/
https://www.tecmint.com/install-docker-and-run-docker-containers-in-ubuntu/
https://docs.docker.com/compose/install/#install-as-a-container

https://docs.docker.com/engine/security/rootless/ --(Follow these steps for intellij setup ***)

https://stackoverflow.com/questions/47854463/docker-got-permission-denied-while-trying-to-connect-to-the-docker-daemon-socke
https://stackoverflow.com/questions/44678725/cannot-connect-to-the-docker-daemon-at-unix-var-run-docker-sock-is-the-docker

sudo systemctl unmask docker.service
sudo systemctl unmask docker.socket
sudo systemctl start docker.service
sudo chmod 777 /var/run/docker.sock



---docker commands---
docker run -it --rm ubuntu
cat /etc/os-release | grep 'VERSION='
docker rm -f $(docker ps -aq)
docker build -t product-service . (in product-service -t tag)
docker images | grep product-service
docker run --rm -p8080:8080 -e "SPRING_PROFILES_ACTIVE=docker" product-service
docker-compose exec mongodb mongo ––quiet
docker-compose exec mysql mysql -uuser -p review-db
docker-compose logs --follow

curl localhost:8080/product/3
docker ps
./gradlew build docker-compose build

docker exec -it 8ed10b9a17d3 bash
mongodb://YOUR_USERNAME_HERE:YOUR_PASSWORD_HERE@0.0.0.0:YOUR_LOCALHOST_PORT_HERE/
mongodb://0.0.0.0:27017



docker images --format 'table {{.Repository}}\t{{.Tag}}\t{{.ID}}\t{{.CreatedAt}}\t{{.Size}}'
docker image prune -a --force --filter "until=2017-01-04T00:00:00"

https://docs.docker.com/engine/reference/commandline/image_prune/


http://localhost:8080/openapi/swagger-ui.html  --docker
http://localhost:7000/openapi/swagger-ui.html  --local

./gradlew build && docker-compose build && docker-compose up -d

exec mongodb mongo product-db --quiet --eval "db.products.find()"
docker-compose exec mongodb mongo product-db --quiet --eval "db.products.find()"
